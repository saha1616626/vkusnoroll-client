// –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç. –°—Ç—Ä–∞–Ω–∏—Ü–∞ "–ê–¥—Ä–µ—Å–∞"
import React, { useState, useEffect, useRef, useCallback } from 'react';
import { useLocation } from 'react-router-dom';

// –ò–º–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
import api from '../../../utils/api';  // API —Å–µ—Ä–≤–µ—Ä–∞
import { useNotification } from "../../contexts/NotificationContext"; // –ö–æ–Ω—Ç–µ–∫—Å—Ç –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
import { useAddressModal } from '../../contexts/AddressModalContext'; // –ö–æ–Ω—Ç–µ–∫—Å—Ç –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ "–ê–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏"
import ConfirmationModal from './../../modals/ConfirmationModal';

// –ò–º–ø–æ—Ä—Ç –∏–∫–æ–Ω–æ–∫
import moreIcon from '../../../assets/icons/moreVertical.png';
import addIcon from '../../../assets/icons/add.png' // –ü–ª—é—Å

// –ò–º–ø–æ—Ä—Ç —Å—Ç–∏–ª–µ–π
import "../../../styles/pages/personalAccount/addressesPage.css";

const AddressesPage = () => {

    /* 
    ===========================
     –°–æ—Å—Ç–æ—è–Ω–∏—è –∏ —Å—Å—ã–ª–∫–∏
    ===========================
    */

    const menuRef = useRef(null); // –°—Å—ã–ª–∫–∞ –Ω–∞ –º–µ–Ω—é –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–¥—Ä–µ—Å–∞
    const location = useLocation(); // –¢–µ–∫—É—â–µ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ (URL)

    const [addresses, setAddresses] = useState([]); // –°–ø–∏—Å–æ–∫ –∞–¥—Ä–µ—Å–æ–≤
    const [selectedAddress, setSelectedAddress] = useState(null); // –í—ã–±—Ä–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å
    const [showMenuId, setShowMenuId] = useState(null); // –ú–µ–Ω—é –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const { addNotification } = useNotification(); // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    const { openModal, closeModal } = useAddressModal(); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ "–ê–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏"
    const [showDeleteConfirm, setShowDeleteConfirm] = useState(false); // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è
    const [addressBeingDeletedId, setaAdressBeingDeletedId] = useState(null); // –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —É–¥–∞–ª—è–µ–º–æ–≥–æ –∞–¥—Ä–µ—Å–∞

    /* 
    ===========================
     –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏
    ===========================
    */

    const fetchAddresses = useCallback(async () => { // fetchAddresses –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞, —Ç–∞–∫ –∫–∞–∫ –Ω–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        try {
            const addressesRes = await api.getDeliveryAddressesByIdClient(localStorage.getItem('clientId'));
            setAddresses(addressesRes.data.sort((a, b) => b.id - a.id) || []);

            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å
            if (addressesRes.data.length > 0) {
                const savedAddressId = localStorage.getItem('SelectedDefaultAddressIdAuthorizedUser');
                const targetAddress = addressesRes.data.find(addr =>
                    addr.id.toString() === savedAddressId?.toString()
                );
                setSelectedAddress(targetAddress || addressesRes.data[0]);
            } else { // –ï—Å–ª–∏ –Ω–µ—Ç –∞–¥—Ä–µ—Å–æ–≤, —Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º —à–∞–ø–∫—É.
                // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–∞—Å—Ç–æ–º–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞ –≤ —à–∞–ø–∫–µ
                window.dispatchEvent(new Event('address-updated'));
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–¥—Ä–µ—Å–æ–≤:', error);
        }
    }, []);

    /* 
    ===========================
     –≠—Ñ—Ñ–µ–∫—Ç—ã
    ===========================
    */

    // –ó–∞–≥—Ä—É–∑–∫–∞ –∞–¥—Ä–µ—Å–æ–≤ –∫–ª–∏–µ–Ω—Ç–∞ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –º–∞—Ä—à—Ä—É—Ç–∞
    useEffect(() => {
        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        fetchAddresses();
    }, [location.key, fetchAddresses, closeModal]); // –ü—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ –¥–∞–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É, –∑–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞, –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –æ–±–Ω–æ–≤—è—Ç—Å—è

    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–¥—Ä–µ—Å–∞
    useEffect(() => {
        const handleClickOutside = (event) => {
            if (menuRef.current && !menuRef.current.contains(event.target)) {
                setShowMenuId(null); // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é
            }
        };

        document.addEventListener('mousedown', handleClickOutside);
        return () => document.removeEventListener('mousedown', handleClickOutside);
    }, [showMenuId]);

    // –í—ã–±–æ—Ä –∞–¥—Ä–µ—Å–∞
    useEffect(() => {
        if (!selectedAddress) return; // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∞–¥—Ä–µ—Å–∞

        const clientId = localStorage.getItem('clientId');
        if (!!clientId) {
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å
            localStorage.setItem('SelectedDefaultAddressIdAuthorizedUser', selectedAddress.id)

            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–∞—Å—Ç–æ–º–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞ –≤ —à–∞–ø–∫–µ
            window.dispatchEvent(new Event('address-updated'));
        }
    }, [selectedAddress]);

    /* 
    ===========================
     –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    ===========================
    */

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–∑–æ–≤–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏
    const handleDeleteInit = async (addressId) => {
        setShowDeleteConfirm(true); // –ó–∞–ø—É—Å–∫ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        setaAdressBeingDeletedId(addressId); // –ü–µ—Ä–µ–¥–∞—á–∞ id
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
    const handleConfirmDelete = async () => {
        try {
            if (!addressBeingDeletedId) return;
            await api.deleteDeliveryAddress(addressBeingDeletedId);
            addNotification('–ê–¥—Ä–µ—Å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω');
            await fetchAddresses(); // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
        } catch (error) {
            addNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–¥—Ä–µ—Å–∞');
            console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:', error);
            await fetchAddresses(); // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Å–ª—É—á–∞–µ —Å–±–æ—è
        } finally {
            setShowDeleteConfirm(false); // –ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        }
    }

    /* 
    ===========================
     –†–µ–Ω–¥–µ—Ä
    ===========================
    */

    return (
        <div className="addresses-page">
            <div className="addresses-page-header">
                <h1 className="addresses-page-title">–ê–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏</h1>

                <div style={{ display: 'flex', justifyContent: 'right' }}>
                    <button
                        className="addresses-page-add-btn"
                        onClick={() => openModal('create')}
                    >
                        <img src={addIcon} alt="Add" className="icon-button" />
                        –î–æ–±–∞–≤–∏—Ç—å –∞–¥—Ä–µ—Å
                    </button>
                </div>
            </div>

            {addresses.length === 0 ? (
                <div className="addresses-page-empty">–î–æ–±–∞–≤—å—Ç–µ –í–∞—à –ø–µ—Ä–≤—ã–π –∞–¥—Ä–µ—Å</div>
            ) : (
                <div className="addresses-list">
                    {addresses.map((address) => (
                        <div
                            key={address.id}
                            className={`address-card ${selectedAddress.id === address.id ? 'selected' : ''}`}
                            onClick={() => setSelectedAddress(address)}
                        >

                            {/* –†–∞–¥–∏–æ –∫–Ω–æ–ø–∫–∞ */}
                            <div className="address-radio-wrapper">
                                <input
                                    type="radio"
                                    name="selectedAddress"
                                    checked={selectedAddress.id === address.id}
                                    onChange={() => setSelectedAddress(address)}
                                />
                            </div>

                            {/* –ê–¥—Ä–µ—Å */}
                            <div style={{ width: '100%', height: '100%', alignContent: 'center' }}>
                                <div className="address-card-body">
                                    <div className="addresses-page-main-info" style={{ marginBottom: address.isPrivateHome ? '0rem' : '' }}>
                                        <p className="addresses-page-city-street">
                                            {address.city}, {address.street}, –¥. {address.house}
                                            {address.isPrivateHome && (
                                                <span className="addresses-page-private-label">–ß–∞—Å—Ç–Ω—ã–π –¥–æ–º</span>
                                            )}
                                        </p>
                                    </div>

                                    <div className="addresses-page-details">
                                        {address.apartment && (
                                            <div className="addresses-page-detail-item">
                                                <span className="icon">üè¢</span>
                                                –ö–≤./–æ—Ñ–∏—Å: {address.apartment}
                                            </div>
                                        )}
                                        {(address.entrance || address.floor) && (
                                            <div className="addresses-page-detail-group">
                                                {address.entrance && (
                                                    <div className="addresses-page-detail-item">
                                                        <span className="icon">üö™</span>
                                                        –ü–æ–¥—ä–µ–∑–¥: {address.entrance}
                                                    </div>
                                                )}
                                                {address.floor && (
                                                    <div className="addresses-page-detail-item">
                                                        <span className="icon">üîº</span>
                                                        –≠—Ç–∞–∂: {address.floor}
                                                    </div>
                                                )}
                                            </div>
                                        )}
                                    </div>

                                    {address.comment && (
                                        <div className="addresses-page-comment">
                                            <span className="icon">üìù</span>
                                            {address.comment?.slice(0, 150)}{address.comment?.length > 150 && '...'}
                                        </div>
                                    )}
                                </div>
                            </div>

                            {/* –ú–µ–Ω—é */}
                            <div className="address-card-header">
                                <button
                                    className="address-card-menu-btn"
                                    onClick={(e) => {
                                        e.stopPropagation(); // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è radio
                                        setShowMenuId(showMenuId === address.id ? null : address.id);
                                    }}
                                >
                                    <img src={moreIcon} alt="–ú–µ–Ω—é" />
                                </button>

                                {showMenuId === address.id && (
                                    <div className="address-card-menu" ref={menuRef}
                                        onClick={(e) => {
                                            e.stopPropagation(); // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è radio
                                        }}>
                                        <button className="menu-item"
                                            onClick={() => openModal('edit', address)}
                                        >
                                            –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                                        </button>
                                        <button className="menu-item delete"
                                            onClick={() => handleDeleteInit(address.id)}
                                        >–£–¥–∞–ª–∏—Ç—å</button>
                                    </div>
                                )}
                            </div>
                        </div>
                    ))}
                </div>
            )}

            {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è  */}
            <ConfirmationModal
                isOpen={showDeleteConfirm}
                title={'–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —É–¥–∞–ª–µ–Ω–∏–µ'}
                message={'–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å?'}
                onConfirm={handleConfirmDelete}
                onCancel={() => { setShowDeleteConfirm(false); }}
            />

        </div>
    );
}

export default AddressesPage;