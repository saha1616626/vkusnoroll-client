// –ö–æ—Ä–∑–∏–Ω–∞

import React, { useEffect, useState, useRef } from 'react';
import { useCart } from "../contexts/CartContext"; // –ö–æ–Ω—Ç–µ–∫—Å—Ç –∫–æ—Ä–∑–∏–Ω—ã

// –ò–º–ø–æ—Ä—Ç —Å—Ç–∏–ª–µ–π
import "./../../styles/components/shoppingCart.css";

const ShoppingCart = () => {

    /* 
    ===========================
     –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏ —Ä–µ—Ñ—ã
    ===========================
    */

    const modalRef = useRef(null); // –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–æ—Ä–∑–∏–Ω—É

    /* 
    ===========================
     –°–æ—Å—Ç–æ—è–Ω–∏—è
    ===========================
    */

    const { cartItems, isCartOpen, toggleCart, updateCart } = useCart(); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã

    const [total, setTotal] = useState(0); // –°—É–º–º–∞ –∫–æ—Ä–∑–∏–Ω—ã
    const [itemsCount, setItemsCount] = useState(0); // –ö–æ–ª-–≤–æ –±–ª—é–¥ –≤ –∫–æ—Ä–∑–∏–Ω–µ

    /* 
    ===========================
     –≠—Ñ—Ñ–µ–∫—Ç—ã
    ===========================
    */

    // –ü–æ–¥—Å—á–µ—Ç —Å—É–º–º—ã –∏ –∫–æ–ª-–≤–æ –±–ª—é–¥ –≤ –∫–æ—Ä–∑–∏–Ω–µ, –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –µ–µ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏—è
    useEffect(() => {
        const calculateTotals = () => {
            const count = cartItems?.reduce((acc, item) => acc + item.quantity, 0); // –ü–æ–¥—Å—á–µ—Ç –∫–æ–ª-–≤–∞
            const sum = cartItems?.reduce((acc, item) => acc + (item.price * item.quantity), 0); // –ü–æ–¥—Å—á–µ—Ç —Å—É–º–º—ã
            setItemsCount(count);
            setTotal(sum);
        };
        calculateTotals();
    }, [cartItems]);

    // –£–±–∏—Ä–∞–µ–º —Å–∫—Ä–æ–ª–ª —Å –ø–µ—Ä–µ–∫—Ä—ã—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    useEffect(() => {
        if (isCartOpen) {
            document.body.classList.add('no-scroll');
        } else {
            document.body.classList.remove('no-scroll');
        }
    }, [isCartOpen]);

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –≤–Ω–µ –∫–æ—Ä–∑–∏–Ω—ã
    useEffect(() => {
        const handleClickOutside = (event) => {
            if (modalRef.current && !modalRef.current.contains(event.target)) {
                toggleCart(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
            }
        };

        document.addEventListener('mousedown', handleClickOutside);
        return () => document.removeEventListener('mousedown', handleClickOutside);
    }, [toggleCart]);

    /* 
    ===========================
     –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    ===========================
    */

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ
    const handleQuantityChange = (id, delta) => { // id —Ç–æ–≤–∞—Ä–∞ –∏ —á–∏—Å–ª–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–ª-–≤–∞
        const newItems = cartItems.map(item =>
            item.id === id ? { ...item, quantity: Math.max(1, item.quantity + delta) } : item // –ù–µ –¥–∞—ë–º –≤—ã—Å—Ç–∞–≤–∏—Ç—å –º–µ–Ω—å—à–µ 1. –í–æ–∑–≤—Ä–∞—Ç item
        );
        updateCart(newItems); // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    };

    // –£–¥–∞–ª–µ–Ω–∏–µ –±–ª—é–¥–∞ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
    const handleRemove = (id) => {
        const newItems = cartItems.filter(item => item.id !== id); // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –±–µ–∑ –¥–∞–Ω–Ω–æ–≥–æ –±–ª—é–¥–∞
        updateCart(newItems);
    };

    // –ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Å–ª–æ–≤–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª-–≤–∞ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ
    const getCorrectWord = (count) => {
        if (count % 10 === 1 && count % 100 !== 11) {
            return "—Ç–æ–≤–∞—Ä";
        } else if (count % 10 >= 2 && count % 10 <= 4 && (count % 100 < 12 || count % 100 > 14)) {
            return "—Ç–æ–≤–∞—Ä–∞";
        }
        return "—Ç–æ–≤–∞—Ä–æ–≤";
    };

    if (!isCartOpen) return null; // –ï—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω–∞ –Ω–µ –æ—Ç–∫—Ä—ã—Ç–∞, —Ç–æ –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–µ —Ä–µ–Ω–¥–µ—Ä–∏–º

    return (
        <div className="shopping-cart-overlay">
            <div className="shopping-cart-container" ref={modalRef}>
                <button className="shopping-cart-close" onClick={toggleCart}>√ó</button>
                <h2 className="shopping-cart-title">–ö–æ—Ä–∑–∏–Ω–∞</h2>

                <div className="shopping-cart-items">
                    {cartItems.map(item => (
                        <div key={item.id} className="shopping-cart-item">
                            <img src={item.image} alt={item.name} className="shopping-cart-item-image" />
                            <div className="shopping-cart-item-info">
                                <h3>{item.name}</h3>
                                <p className="shopping-cart-item-description">
                                    {item.description?.slice(0, 50)}{item.description?.length > 50 && '...'}
                                </p>
                                <div className="shopping-cart-item-meta">
                                    <span>{item.weight ? `${item.weight} –≥` : item.volume ? `${item.volume} –ª` : ''}</span>
                                    <span>{item.price} ‚ÇΩ</span>
                                </div>
                                <div className="shopping-cart-item-controls">
                                    <div className="shopping-cart-item-quantity">
                                        <button onClick={() => handleQuantityChange(item.id, -1)}>-</button>
                                        <span>{item.quantity}</span>
                                        <button onClick={() => handleQuantityChange(item.id, 1)}>+</button>
                                    </div>
                                    <button
                                        className="shopping-cart-item-remove"
                                        onClick={() => handleRemove(item.id)}
                                    >üóëÔ∏è</button>
                                </div>
                            </div>
                        </div>
                    ))}
                </div>

                <div className="shopping-cart-footer">
                    <div className="shopping-cart-total">
                        {itemsCount} {getCorrectWord(itemsCount)} –Ω–∞ —Å—É–º–º—É {total}‚ÇΩ
                    </div>
                    <button className="shopping-cart-checkout">–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑</button>
                </div>
            </div>
        </div>
    );

};

export default ShoppingCart;